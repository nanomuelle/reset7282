#ifndef RESET_BREAKOUT
#define RESET_BREAKOUT

#include <cpctelera.h>
#include <globals.h>

// WORLD
#define BREAKOUT_PX_TO_WORLD(px)    ( px << 8 ) // PX TO PHYSICS UNITS

#define BREAKOUT_WORLD_W            ((i16) BREAKOUT_PX_TO_WORLD( ROOM_TXT_BOX_W ) )
#define BREAKOUT_WORLD_H            ((i16) BREAKOUT_PX_TO_WORLD( ROOM_TXT_BOX_H ) )

#define BREAKOUT_WORLD_MIN_X        ((i16) ((-BREAKOUT_WORLD_W >> 1) + BREAKOUT_PX_TO_WORLD(1)) )
#define BREAKOUT_WORLD_MAX_X        ((i16) (( BREAKOUT_WORLD_W >> 1) - BREAKOUT_PX_TO_WORLD(1)) )
#define BREAKOUT_WORLD_MIN_Y        ((i16) ((-BREAKOUT_WORLD_H >> 1) + BREAKOUT_PX_TO_WORLD(2)) )
#define BREAKOUT_WORLD_MAX_Y        ((i16) (( BREAKOUT_WORLD_H >> 1) - BREAKOUT_PX_TO_WORLD(2)) )

// ENTITIES
#define BREAKOUT_MAN_ENTITY_BUFFER_SIZE 30

typedef enum BreakoutEntityIdEnum {
    BREAKOUT_ENTITY_ID_NULL = 0,
    BREAKOUT_ENTITY_ID_BALL,
    BREAKOUT_ENTITY_ID_PADDEL
} TBreakoutEntityId;

// BALL ENTITY
#define BREAKOUT_WORLD_BALL_W       ( BREAKOUT_PX_TO_WORLD(1) )
#define BREAKOUT_WORLD_BALL_H       ( BREAKOUT_PX_TO_WORLD(4) )
#define BREAKOUT_WORLD_BALL_X       ( 0 )
#define BREAKOUT_WORLD_BALL_Y       ( 0 )
#define BREAKOUT_WORLD_BALL_VX      ( -100 )
#define BREAKOUT_WORLD_BALL_VY      (  48 )
#define BREAKOUT_WORLD_BALL_MAX_VX  ( 400 )
#define BREAKOUT_WORLD_BALL_MAX_VY  ( 400 )

// PADDEL ENTITY
#define BREAKOUT_WORLD_PADDEL_W     ( BREAKOUT_PX_TO_WORLD(6) )
#define BREAKOUT_WORLD_PADDEL_H     ( BREAKOUT_PX_TO_WORLD(8) )
#define BREAKOUT_WORLD_PADDEL_VX    ( 200 )
#define BREAKOUT_WORLD_PADDEL_VY    ( 0 )
#define BREAKOUT_WORLD_PADDEL_X     ( BREAKOUT_WORLD_PADDEL_W >> 1 )
#define BREAKOUT_WORLD_PADDEL_Y     ( BREAKOUT_WORLD_MAX_Y - BREAKOUT_WORLD_PADDEL_H - BREAKOUT_PX_TO_WORLD(4) )

#endif