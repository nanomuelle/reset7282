#pragma once

#include <globals.h>
#include <console/console.h>

#include <assets/pong_ball_m1.h>

// FOREGROUND PEN FOR ALL
#define PONG_PEN 3

// ODYSSEY TITLE
#define PONG_WORLD_ODYSSEY_LETTER_WIDTH     ((i16) CSP_PX_TO_WORLD( 4)) // 16 PX = 4 bytes
#define PONG_WORLD_ODYSSEY_LETTER_HEIGHT    ((i16) CSP_PX_TO_WORLD(24))

// ENTITIES
typedef enum PongEntityIdEnum {
    PONG_ENTITY_ID_NULL = 0,
    PONG_ENTITY_ID_BALL,
    PONG_ENTITY_ID_LEFT_PADDEL,
    PONG_ENTITY_ID_RIGHT_PADDEL
} TPongEntityId;

#define PONG_WORLD_PADDEL_W       ( CSP_PX_TO_WORLD( M1_BYTES_TO_PX(G_SPR_PONG_PADDEL_M1_W - 1) ) )
#define PONG_WORLD_PADDEL_H       ( CSP_PX_TO_WORLD( G_SPR_PONG_PADDEL_M1_H ) )

#define PONG_WORLD_PADDEL_VX      ( 0 )
#define PONG_WORLD_PADDEL_VY      ( 350 )

#define PONG_WORLD_LEFT_PADDEL_X  ( CSP_PX_TO_WORLD(4 + G_SPR_PONG_PADDEL_M1_0_W ) )
#define PONG_WORLD_LEFT_PADDEL_Y  ( CSP_WORLD_H / 2 )

#define PONG_WORLD_RIGHT_PADDEL_X ( CSP_WORLD_W - CSP_PX_TO_WORLD(G_SPR_PONG_PADDEL_M1_0_W + 7) )
#define PONG_WORLD_RIGHT_PADDEL_Y ( CSP_WORLD_H / 2 )

// BALL
#define PONG_BALL_WORLD_MAX_VX  ( CSP_PX_TO_WORLD(3) )
#define PONG_BALL_WORLD_MIN_VX  ( -CSP_PX_TO_WORLD(3) )
#define PONG_BALL_WORLD_MAX_VY  ( CSP_PX_TO_WORLD(3) )
#define PONG_BALL_WORLD_MIN_VY  ( -CSP_PX_TO_WORLD(3) )

#define PONG_BALL_WORLD_IVX     ( 5 )
#define PONG_POINTS_TO_WIN      ( 3 )
